#!/usr/bin/env node

var sys = require('sys'),
    path = require('path'),
    fs = require('fs'),
    argv = require('optimist').argv,
    server = require('../server/server'),
    conf = require('../server/conf.json');
    
var help = [
    "",
    "usage:".underline,

    "  start [options]                                                  ",
    "                                                                   ",

    "options:".underline,

    "  -s --silent    Suppress the log messages from the output           ",
    "  -c --cache     Use local cache, don't download repos from GitHub   ",
    "  -h, --help     This is it!                                         ",
    ""
].join('\n');

if (argv.h || argv.help) {
  return console.log(help);
}

var conf = JSON.parse(fs.readFileSync('./server/conf.json'));

['orgname', 'tagline'].forEach(function(val, index) {
  if(!conf[val]) {
    throw new Error('start requires `' + val + '` from the `conf.json` file.');
  }
});

var config = {
  "orgname": conf.orgname,
  "tagline": conf.tagline,
  "auth": conf.auth,
  "port": argv.p || argv.port || 8080,
  "host": argv.h || argv.host || '127.0.0.1'
};

server.createServer(config);


// var content = new Content(conf);

// function afterDownload() {
//   content.loadRepos(function(err) {
//     if (err) { throw err; }
//     content.aggregate();
//     content.compose(assets, content.repos);
//     server.createServer(assets, content, config);
//   });
// }

// if (! argv.c) {
//   content.downloadAll(afterDownload);
// } else {
//   afterDownload();
// }